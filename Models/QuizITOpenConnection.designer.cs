#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUIZ_IT.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TracNghiemIT")]
	public partial class QuizITOpenConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaiTracNghiem(BaiTracNghiem instance);
    partial void UpdateBaiTracNghiem(BaiTracNghiem instance);
    partial void DeleteBaiTracNghiem(BaiTracNghiem instance);
    partial void InsertQuyen(Quyen instance);
    partial void UpdateQuyen(Quyen instance);
    partial void DeleteQuyen(Quyen instance);
    partial void InsertCauHoiTracNghiem(CauHoiTracNghiem instance);
    partial void UpdateCauHoiTracNghiem(CauHoiTracNghiem instance);
    partial void DeleteCauHoiTracNghiem(CauHoiTracNghiem instance);
    partial void InsertDapAnTracNghiem(DapAnTracNghiem instance);
    partial void UpdateDapAnTracNghiem(DapAnTracNghiem instance);
    partial void DeleteDapAnTracNghiem(DapAnTracNghiem instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertBinhLuanChiTiet(BinhLuanChiTiet instance);
    partial void UpdateBinhLuanChiTiet(BinhLuanChiTiet instance);
    partial void DeleteBinhLuanChiTiet(BinhLuanChiTiet instance);
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertGiaoDich(GiaoDich instance);
    partial void UpdateGiaoDich(GiaoDich instance);
    partial void DeleteGiaoDich(GiaoDich instance);
    #endregion
		
		public QuizITOpenConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TracNghiemITConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuizITOpenConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizITOpenConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizITOpenConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizITOpenConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaiTracNghiem> BaiTracNghiems
		{
			get
			{
				return this.GetTable<BaiTracNghiem>();
			}
		}
		
		public System.Data.Linq.Table<Quyen> Quyens
		{
			get
			{
				return this.GetTable<Quyen>();
			}
		}
		
		public System.Data.Linq.Table<CauHoiTracNghiem> CauHoiTracNghiems
		{
			get
			{
				return this.GetTable<CauHoiTracNghiem>();
			}
		}
		
		public System.Data.Linq.Table<DapAnTracNghiem> DapAnTracNghiems
		{
			get
			{
				return this.GetTable<DapAnTracNghiem>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuanChiTiet> BinhLuanChiTiets
		{
			get
			{
				return this.GetTable<BinhLuanChiTiet>();
			}
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<GiaoDich> GiaoDiches
		{
			get
			{
				return this.GetTable<GiaoDich>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiTracNghiem")]
	public partial class BaiTracNghiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenBaiTracNghiem;
		
		private string _MoTaBaiTracNghiem;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _NguoiDungId;
		
		private EntitySet<CauHoiTracNghiem> _CauHoiTracNghiems;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenBaiTracNghiemChanging(string value);
    partial void OnTenBaiTracNghiemChanged();
    partial void OnMoTaBaiTracNghiemChanging(string value);
    partial void OnMoTaBaiTracNghiemChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnNguoiDungIdChanging(System.Nullable<int> value);
    partial void OnNguoiDungIdChanged();
    #endregion
		
		public BaiTracNghiem()
		{
			this._CauHoiTracNghiems = new EntitySet<CauHoiTracNghiem>(new Action<CauHoiTracNghiem>(this.attach_CauHoiTracNghiems), new Action<CauHoiTracNghiem>(this.detach_CauHoiTracNghiems));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBaiTracNghiem", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string TenBaiTracNghiem
		{
			get
			{
				return this._TenBaiTracNghiem;
			}
			set
			{
				if ((this._TenBaiTracNghiem != value))
				{
					this.OnTenBaiTracNghiemChanging(value);
					this.SendPropertyChanging();
					this._TenBaiTracNghiem = value;
					this.SendPropertyChanged("TenBaiTracNghiem");
					this.OnTenBaiTracNghiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaBaiTracNghiem", DbType="NVarChar(1000)")]
		public string MoTaBaiTracNghiem
		{
			get
			{
				return this._MoTaBaiTracNghiem;
			}
			set
			{
				if ((this._MoTaBaiTracNghiem != value))
				{
					this.OnMoTaBaiTracNghiemChanging(value);
					this.SendPropertyChanging();
					this._MoTaBaiTracNghiem = value;
					this.SendPropertyChanged("MoTaBaiTracNghiem");
					this.OnMoTaBaiTracNghiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="Int")]
		public System.Nullable<int> NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiTracNghiem_CauHoiTracNghiem", Storage="_CauHoiTracNghiems", ThisKey="Id", OtherKey="BaiTracNghiemId")]
		public EntitySet<CauHoiTracNghiem> CauHoiTracNghiems
		{
			get
			{
				return this._CauHoiTracNghiems;
			}
			set
			{
				this._CauHoiTracNghiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaiTracNghiem", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BaiTracNghiems.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BaiTracNghiems.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHoiTracNghiems(CauHoiTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.BaiTracNghiem = this;
		}
		
		private void detach_CauHoiTracNghiems(CauHoiTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.BaiTracNghiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen")]
	public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LoaiQuyen;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLoaiQuyenChanging(string value);
    partial void OnLoaiQuyenChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Quyen()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiQuyen", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LoaiQuyen
		{
			get
			{
				return this._LoaiQuyen;
			}
			set
			{
				if ((this._LoaiQuyen != value))
				{
					this.OnLoaiQuyenChanging(value);
					this.SendPropertyChanging();
					this._LoaiQuyen = value;
					this.SendPropertyChanged("LoaiQuyen");
					this.OnLoaiQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NguoiDung", Storage="_NguoiDungs", ThisKey="Id", OtherKey="QuyenId")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.Quyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoiTracNghiem")]
	public partial class CauHoiTracNghiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CauHoi;
		
		private System.Nullable<int> _BaiTracNghiemId;
		
		private EntitySet<DapAnTracNghiem> _DapAnTracNghiems;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntityRef<BaiTracNghiem> _BaiTracNghiem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCauHoiChanging(string value);
    partial void OnCauHoiChanged();
    partial void OnBaiTracNghiemIdChanging(System.Nullable<int> value);
    partial void OnBaiTracNghiemIdChanged();
    #endregion
		
		public CauHoiTracNghiem()
		{
			this._DapAnTracNghiems = new EntitySet<DapAnTracNghiem>(new Action<DapAnTracNghiem>(this.attach_DapAnTracNghiems), new Action<DapAnTracNghiem>(this.detach_DapAnTracNghiems));
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._BaiTracNghiem = default(EntityRef<BaiTracNghiem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="NVarChar(1000)")]
		public string CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaiTracNghiemId", DbType="Int")]
		public System.Nullable<int> BaiTracNghiemId
		{
			get
			{
				return this._BaiTracNghiemId;
			}
			set
			{
				if ((this._BaiTracNghiemId != value))
				{
					if (this._BaiTracNghiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaiTracNghiemIdChanging(value);
					this.SendPropertyChanging();
					this._BaiTracNghiemId = value;
					this.SendPropertyChanged("BaiTracNghiemId");
					this.OnBaiTracNghiemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoiTracNghiem_DapAnTracNghiem", Storage="_DapAnTracNghiems", ThisKey="Id", OtherKey="CauHoiTracNghiemId")]
		public EntitySet<DapAnTracNghiem> DapAnTracNghiems
		{
			get
			{
				return this._DapAnTracNghiems;
			}
			set
			{
				this._DapAnTracNghiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoiTracNghiem_BinhLuan", Storage="_BinhLuans", ThisKey="Id", OtherKey="CauHoiId")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiTracNghiem_CauHoiTracNghiem", Storage="_BaiTracNghiem", ThisKey="BaiTracNghiemId", OtherKey="Id", IsForeignKey=true)]
		public BaiTracNghiem BaiTracNghiem
		{
			get
			{
				return this._BaiTracNghiem.Entity;
			}
			set
			{
				BaiTracNghiem previousValue = this._BaiTracNghiem.Entity;
				if (((previousValue != value) 
							|| (this._BaiTracNghiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiTracNghiem.Entity = null;
						previousValue.CauHoiTracNghiems.Remove(this);
					}
					this._BaiTracNghiem.Entity = value;
					if ((value != null))
					{
						value.CauHoiTracNghiems.Add(this);
						this._BaiTracNghiemId = value.Id;
					}
					else
					{
						this._BaiTracNghiemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaiTracNghiem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DapAnTracNghiems(DapAnTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.CauHoiTracNghiem = this;
		}
		
		private void detach_DapAnTracNghiems(DapAnTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.CauHoiTracNghiem = null;
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.CauHoiTracNghiem = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.CauHoiTracNghiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DapAnTracNghiem")]
	public partial class DapAnTracNghiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CauTraLoi;
		
		private System.Nullable<bool> _DapAn;
		
		private System.Nullable<int> _CauHoiTracNghiemId;
		
		private EntityRef<CauHoiTracNghiem> _CauHoiTracNghiem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCauTraLoiChanging(string value);
    partial void OnCauTraLoiChanged();
    partial void OnDapAnChanging(System.Nullable<bool> value);
    partial void OnDapAnChanged();
    partial void OnCauHoiTracNghiemIdChanging(System.Nullable<int> value);
    partial void OnCauHoiTracNghiemIdChanged();
    #endregion
		
		public DapAnTracNghiem()
		{
			this._CauHoiTracNghiem = default(EntityRef<CauHoiTracNghiem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauTraLoi", DbType="NVarChar(1000)")]
		public string CauTraLoi
		{
			get
			{
				return this._CauTraLoi;
			}
			set
			{
				if ((this._CauTraLoi != value))
				{
					this.OnCauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._CauTraLoi = value;
					this.SendPropertyChanged("CauTraLoi");
					this.OnCauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="Bit")]
		public System.Nullable<bool> DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoiTracNghiemId", DbType="Int")]
		public System.Nullable<int> CauHoiTracNghiemId
		{
			get
			{
				return this._CauHoiTracNghiemId;
			}
			set
			{
				if ((this._CauHoiTracNghiemId != value))
				{
					if (this._CauHoiTracNghiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauHoiTracNghiemIdChanging(value);
					this.SendPropertyChanging();
					this._CauHoiTracNghiemId = value;
					this.SendPropertyChanged("CauHoiTracNghiemId");
					this.OnCauHoiTracNghiemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoiTracNghiem_DapAnTracNghiem", Storage="_CauHoiTracNghiem", ThisKey="CauHoiTracNghiemId", OtherKey="Id", IsForeignKey=true)]
		public CauHoiTracNghiem CauHoiTracNghiem
		{
			get
			{
				return this._CauHoiTracNghiem.Entity;
			}
			set
			{
				CauHoiTracNghiem previousValue = this._CauHoiTracNghiem.Entity;
				if (((previousValue != value) 
							|| (this._CauHoiTracNghiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoiTracNghiem.Entity = null;
						previousValue.DapAnTracNghiems.Remove(this);
					}
					this._CauHoiTracNghiem.Entity = value;
					if ((value != null))
					{
						value.DapAnTracNghiems.Add(this);
						this._CauHoiTracNghiemId = value.Id;
					}
					else
					{
						this._CauHoiTracNghiemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauHoiTracNghiem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _HoTen;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _QuyenId;
		
		private System.Nullable<int> _Vip;
		
		private EntitySet<BaiTracNghiem> _BaiTracNghiems;
		
		private EntitySet<BinhLuanChiTiet> _BinhLuanChiTiets;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<GiaoDich> _GiaoDiches;
		
		private EntityRef<Quyen> _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnQuyenIdChanging(System.Nullable<int> value);
    partial void OnQuyenIdChanged();
    partial void OnVipChanging(System.Nullable<int> value);
    partial void OnVipChanged();
    #endregion
		
		public NguoiDung()
		{
			this._BaiTracNghiems = new EntitySet<BaiTracNghiem>(new Action<BaiTracNghiem>(this.attach_BaiTracNghiems), new Action<BaiTracNghiem>(this.detach_BaiTracNghiems));
			this._BinhLuanChiTiets = new EntitySet<BinhLuanChiTiet>(new Action<BinhLuanChiTiet>(this.attach_BinhLuanChiTiets), new Action<BinhLuanChiTiet>(this.detach_BinhLuanChiTiets));
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._GiaoDiches = new EntitySet<GiaoDich>(new Action<GiaoDich>(this.attach_GiaoDiches), new Action<GiaoDich>(this.detach_GiaoDiches));
			this._Quyen = default(EntityRef<Quyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuyenId", DbType="Int")]
		public System.Nullable<int> QuyenId
		{
			get
			{
				return this._QuyenId;
			}
			set
			{
				if ((this._QuyenId != value))
				{
					if (this._Quyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuyenIdChanging(value);
					this.SendPropertyChanging();
					this._QuyenId = value;
					this.SendPropertyChanged("QuyenId");
					this.OnQuyenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip", DbType="Int")]
		public System.Nullable<int> Vip
		{
			get
			{
				return this._Vip;
			}
			set
			{
				if ((this._Vip != value))
				{
					this.OnVipChanging(value);
					this.SendPropertyChanging();
					this._Vip = value;
					this.SendPropertyChanged("Vip");
					this.OnVipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaiTracNghiem", Storage="_BaiTracNghiems", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<BaiTracNghiem> BaiTracNghiems
		{
			get
			{
				return this._BaiTracNghiems;
			}
			set
			{
				this._BaiTracNghiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuanChiTiet", Storage="_BinhLuanChiTiets", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<BinhLuanChiTiet> BinhLuanChiTiets
		{
			get
			{
				return this._BinhLuanChiTiets;
			}
			set
			{
				this._BinhLuanChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_BinhLuans", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GiaoDich", Storage="_GiaoDiches", ThisKey="Id", OtherKey="NguoiDungId")]
		public EntitySet<GiaoDich> GiaoDiches
		{
			get
			{
				return this._GiaoDiches;
			}
			set
			{
				this._GiaoDiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_NguoiDung", Storage="_Quyen", ThisKey="QuyenId", OtherKey="Id", IsForeignKey=true)]
		public Quyen Quyen
		{
			get
			{
				return this._Quyen.Entity;
			}
			set
			{
				Quyen previousValue = this._Quyen.Entity;
				if (((previousValue != value) 
							|| (this._Quyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quyen.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._Quyen.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._QuyenId = value.Id;
					}
					else
					{
						this._QuyenId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Quyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiTracNghiems(BaiTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BaiTracNghiems(BaiTracNghiem entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_BinhLuanChiTiets(BinhLuanChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BinhLuanChiTiets(BinhLuanChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_GiaoDiches(GiaoDich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_GiaoDiches(GiaoDich entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuanChiTiet")]
	public partial class BinhLuanChiTiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<bool> _DaThich;
		
		private System.Nullable<int> _NguoiDungId;
		
		private System.Nullable<int> _BinhLuanId;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<BinhLuan> _BinhLuan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDaThichChanging(System.Nullable<bool> value);
    partial void OnDaThichChanged();
    partial void OnNguoiDungIdChanging(System.Nullable<int> value);
    partial void OnNguoiDungIdChanged();
    partial void OnBinhLuanIdChanging(System.Nullable<int> value);
    partial void OnBinhLuanIdChanged();
    #endregion
		
		public BinhLuanChiTiet()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._BinhLuan = default(EntityRef<BinhLuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThich", DbType="Bit")]
		public System.Nullable<bool> DaThich
		{
			get
			{
				return this._DaThich;
			}
			set
			{
				if ((this._DaThich != value))
				{
					this.OnDaThichChanging(value);
					this.SendPropertyChanging();
					this._DaThich = value;
					this.SendPropertyChanged("DaThich");
					this.OnDaThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="Int")]
		public System.Nullable<int> NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BinhLuanId", DbType="Int")]
		public System.Nullable<int> BinhLuanId
		{
			get
			{
				return this._BinhLuanId;
			}
			set
			{
				if ((this._BinhLuanId != value))
				{
					if (this._BinhLuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBinhLuanIdChanging(value);
					this.SendPropertyChanging();
					this._BinhLuanId = value;
					this.SendPropertyChanged("BinhLuanId");
					this.OnBinhLuanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuanChiTiet", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BinhLuanChiTiets.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BinhLuanChiTiets.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_BinhLuanChiTiet", Storage="_BinhLuan", ThisKey="BinhLuanId", OtherKey="id", IsForeignKey=true)]
		public BinhLuan BinhLuan
		{
			get
			{
				return this._BinhLuan.Entity;
			}
			set
			{
				BinhLuan previousValue = this._BinhLuan.Entity;
				if (((previousValue != value) 
							|| (this._BinhLuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BinhLuan.Entity = null;
						previousValue.BinhLuanChiTiets.Remove(this);
					}
					this._BinhLuan.Entity = value;
					if ((value != null))
					{
						value.BinhLuanChiTiets.Add(this);
						this._BinhLuanId = value.id;
					}
					else
					{
						this._BinhLuanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BinhLuan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGianDang;
		
		private System.Nullable<int> _NguoiDungId;
		
		private System.Nullable<int> _CauHoiId;
		
		private EntitySet<BinhLuanChiTiet> _BinhLuanChiTiets;
		
		private EntityRef<CauHoiTracNghiem> _CauHoiTracNghiem;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnThoiGianDangChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDangChanged();
    partial void OnNguoiDungIdChanging(System.Nullable<int> value);
    partial void OnNguoiDungIdChanged();
    partial void OnCauHoiIdChanging(System.Nullable<int> value);
    partial void OnCauHoiIdChanged();
    #endregion
		
		public BinhLuan()
		{
			this._BinhLuanChiTiets = new EntitySet<BinhLuanChiTiet>(new Action<BinhLuanChiTiet>(this.attach_BinhLuanChiTiets), new Action<BinhLuanChiTiet>(this.detach_BinhLuanChiTiets));
			this._CauHoiTracNghiem = default(EntityRef<CauHoiTracNghiem>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(2500)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDang
		{
			get
			{
				return this._ThoiGianDang;
			}
			set
			{
				if ((this._ThoiGianDang != value))
				{
					this.OnThoiGianDangChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDang = value;
					this.SendPropertyChanged("ThoiGianDang");
					this.OnThoiGianDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="Int")]
		public System.Nullable<int> NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoiId", DbType="Int")]
		public System.Nullable<int> CauHoiId
		{
			get
			{
				return this._CauHoiId;
			}
			set
			{
				if ((this._CauHoiId != value))
				{
					if (this._CauHoiTracNghiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauHoiIdChanging(value);
					this.SendPropertyChanging();
					this._CauHoiId = value;
					this.SendPropertyChanged("CauHoiId");
					this.OnCauHoiIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_BinhLuanChiTiet", Storage="_BinhLuanChiTiets", ThisKey="id", OtherKey="BinhLuanId")]
		public EntitySet<BinhLuanChiTiet> BinhLuanChiTiets
		{
			get
			{
				return this._BinhLuanChiTiets;
			}
			set
			{
				this._BinhLuanChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoiTracNghiem_BinhLuan", Storage="_CauHoiTracNghiem", ThisKey="CauHoiId", OtherKey="Id", IsForeignKey=true)]
		public CauHoiTracNghiem CauHoiTracNghiem
		{
			get
			{
				return this._CauHoiTracNghiem.Entity;
			}
			set
			{
				CauHoiTracNghiem previousValue = this._CauHoiTracNghiem.Entity;
				if (((previousValue != value) 
							|| (this._CauHoiTracNghiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoiTracNghiem.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._CauHoiTracNghiem.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._CauHoiId = value.Id;
					}
					else
					{
						this._CauHoiId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CauHoiTracNghiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BinhLuan", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuanChiTiets(BinhLuanChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = this;
		}
		
		private void detach_BinhLuanChiTiets(BinhLuanChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoDich")]
	public partial class GiaoDich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MaGiaoDich;
		
		private System.Nullable<double> _GiaTien;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _NguoiDungId;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMaGiaoDichChanging(string value);
    partial void OnMaGiaoDichChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnNguoiDungIdChanging(System.Nullable<int> value);
    partial void OnNguoiDungIdChanged();
    #endregion
		
		public GiaoDich()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoDich", DbType="NVarChar(30)")]
		public string MaGiaoDich
		{
			get
			{
				return this._MaGiaoDich;
			}
			set
			{
				if ((this._MaGiaoDich != value))
				{
					this.OnMaGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoDich = value;
					this.SendPropertyChanged("MaGiaoDich");
					this.OnMaGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungId", DbType="Int")]
		public System.Nullable<int> NguoiDungId
		{
			get
			{
				return this._NguoiDungId;
			}
			set
			{
				if ((this._NguoiDungId != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIdChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungId = value;
					this.SendPropertyChanged("NguoiDungId");
					this.OnNguoiDungIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GiaoDich", Storage="_NguoiDung", ThisKey="NguoiDungId", OtherKey="Id", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.GiaoDiches.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.GiaoDiches.Add(this);
						this._NguoiDungId = value.Id;
					}
					else
					{
						this._NguoiDungId = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
